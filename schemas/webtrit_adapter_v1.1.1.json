{
  "openapi": "3.0.2",
  "info": {
    "title": "Sample adapter for connecting WebTrit to a BSS",
    "description": "Adapter that translates API requests from WebTrit core\n        to a hosted PBX system. It enables to authenticate users,\n        obtain their SIP credentials, etc.",
    "version": "0.1.0"
  },
  "paths": {
    "/health-check": {
      "get": {
        "summary": "Health Check",
        "description": "Confirm the service is running",
        "operationId": "health_check_health_check_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Health"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/session": {
      "post": {
        "tags": [
          "session"
        ],
        "summary": "Create Session",
        "description": "Login user using username and password",
        "operationId": "create_session_api_v1_session_post",
        "parameters": [
          {
            "required": false,
            "schema": {
              "title": "X-Webtrit-Tenant-Id",
              "type": "string"
            },
            "name": "X-WebTrit-Tenant-ID",
            "in": "header"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SessionCreateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SessionResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateSessionUnauthorizedErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateSessionUnprocessableEntityErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateSessionInternalServerErrorErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "session"
        ],
        "summary": "Delete Session",
        "description": "Sign out the user",
        "operationId": "delete_session_api_v1_session_delete",
        "parameters": [
          {
            "required": false,
            "schema": {
              "title": "X-Webtrit-Tenant-Id",
              "type": "string"
            },
            "name": "X-WebTrit-Tenant-ID",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteSessionUnauthorizedErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteSessionNotFoundErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteSessionInternalServerErrorErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      },
      "patch": {
        "tags": [
          "session"
        ],
        "summary": "Update Session",
        "description": "Refresh user's API session and retrieve new tokens",
        "operationId": "update_session_api_v1_session_patch",
        "parameters": [
          {
            "required": false,
            "schema": {
              "title": "X-Webtrit-Tenant-Id",
              "type": "string"
            },
            "name": "X-WebTrit-Tenant-ID",
            "in": "header"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SessionUpdateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SessionResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateSessionNotFoundErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateSessionUnprocessableEntityErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateSessionInternalServerErrorErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/session/auto-provision": {
      "post": {
        "tags": [
          "session"
        ],
        "summary": "Autoprovision Session",
        "description": "Establish an authenticated session without any direct interaction with the user\nby utilizing a temporary \"provisioning token\" (sent via email, SMS, QR code)\n\nReturns:\nSessionResponse (so the result is identical to the regular login)",
        "operationId": "autoprovision_session_api_v1_session_auto_provision_post",
        "parameters": [
          {
            "required": false,
            "schema": {
              "title": "X-Webtrit-Tenant-Id",
              "type": "string"
            },
            "name": "X-WebTrit-Tenant-ID",
            "in": "header"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SessionAutoProvisionRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SessionResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProvisionSessionAutoUnauthorizedErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProvisionSessionAutoUnprocessableEntityErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProvisionSessionAutoInternalServerErrorErrorResponse"
                }
              }
            }
          },
          "501": {
            "description": "Not Implemented",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProvisionSessionAutoNotImplementedErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/session/otp-create": {
      "post": {
        "tags": [
          "session"
        ],
        "summary": "Create Session Otp",
        "description": "Generate and send an OTP to the usercreate_otp",
        "operationId": "create_session_otp_api_v1_session_otp_create_post",
        "parameters": [
          {
            "required": false,
            "schema": {
              "title": "X-Webtrit-Tenant-Id",
              "type": "string"
            },
            "name": "X-WebTrit-Tenant-ID",
            "in": "header"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SessionOtpCreateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SessionOtpCreateResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateSessionOtpNotFoundErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateSessionOtpUnprocessableEntityErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateSessionOtpInternalServerErrorErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/session/otp-verify": {
      "post": {
        "tags": [
          "session"
        ],
        "summary": "Verify Session Otp",
        "description": "Verify the OTP and sign in the user",
        "operationId": "verify_session_otp_api_v1_session_otp_verify_post",
        "parameters": [
          {
            "required": false,
            "schema": {
              "title": "X-Webtrit-Tenant-Id",
              "type": "string"
            },
            "name": "X-WebTrit-Tenant-ID",
            "in": "header"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SessionOtpVerifyRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SessionInfo"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VerifySessionOtpNotFoundErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VerifySessionOtpUnprocessableEntityErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VerifySessionOtpInternalServerErrorErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/system-info": {
      "get": {
        "tags": [
          "general"
        ],
        "summary": "Get System Info",
        "description": "Supply information about the capabilities of the hosted PBX system and/or BSS adapter",
        "operationId": "get_system_info_api_v1_system_info_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SystemInfoShowResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetSystemInfoInternalServerErrorErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/user": {
      "get": {
        "tags": [
          "user"
        ],
        "summary": "Get User Info",
        "description": "Get user information",
        "operationId": "get_user_info_api_v1_user_get",
        "parameters": [
          {
            "required": false,
            "schema": {
              "title": "X-Webtrit-Tenant-Id",
              "type": "string"
            },
            "name": "X-WebTrit-Tenant-ID",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserInfoShowResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetUserInfoUnauthorizedErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetUserInfoNotFoundErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetUserInfoUnprocessableEntityErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetUserInfoInternalServerErrorErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "user"
        ],
        "summary": "Signup",
        "description": "Create a new user on the BSS / hosted PBX side as a part of the sign-up process.\nThe input data depends on the specifics of your application (e.g. one would sign\nup users just using their mobile phone number, while another would require address,\nemail, credit card info, etc.) - so it is not defined by the schema and passed \"as is\".\n\nParameters:\nbody - dictionary with the user's data\n\nReturns:\n    UserCreateResponse, which (upon success) can contain one of the following objects:\n        - SessionResponse means that a new user was created and signed in, the object\n            contains the access token to be used for subsequent requests\n        - SessionOtpCreateResponse means that a new user was created and an OTP\n            (email, SMS, etc.) was sent to the user, the object contains the OTP\n            request ID. The user should be prompted for the OTP code and then it\n            will be validated with OTP request ID.\n        - freeform dictionary with the data to be interpreted by the front-end app",
        "operationId": "signup_api_v1_user_post",
        "parameters": [
          {
            "required": false,
            "schema": {
              "title": "X-Webtrit-Tenant-Id",
              "type": "string"
            },
            "name": "X-WebTrit-Tenant-ID",
            "in": "header"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "Body",
                "type": "object"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserCreateResponse"
                }
              }
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateUserMethodNotAllowedErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateUserUnprocessableEntityErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateUserInternalServerErrorErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "user"
        ],
        "summary": "Delete User",
        "description": "Delete an existing user - this functionality is required if the app allows to sign up",
        "operationId": "delete_user_api_v1_user_delete",
        "parameters": [
          {
            "required": false,
            "schema": {
              "title": "X-Webtrit-Tenant-Id",
              "type": "string"
            },
            "name": "X-WebTrit-Tenant-ID",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteSessionUnauthorizedErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteSessionNotFoundErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteSessionInternalServerErrorErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/v1/user/contacts": {
      "get": {
        "tags": [
          "user"
        ],
        "summary": "Get User Contact List",
        "description": "Get corporate directory (contacts of other users in the same PBX)",
        "operationId": "get_user_contact_list_api_v1_user_contacts_get",
        "parameters": [
          {
            "required": false,
            "schema": {
              "title": "X-Webtrit-Tenant-Id",
              "type": "string"
            },
            "name": "X-WebTrit-Tenant-ID",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserContactIndexResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetUserContactListUnauthorizedErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetUserContactListNotFoundErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetUserContactListUnprocessableEntityErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetUserContactListInternalServerErrorErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/v1/user/history": {
      "get": {
        "tags": [
          "user"
        ],
        "summary": "Get User History List",
        "description": "Get user's call history",
        "operationId": "get_user_history_list_api_v1_user_history_get",
        "parameters": [
          {
            "required": false,
            "schema": {
              "title": "Page",
              "minimum": 1.0,
              "type": "integer",
              "default": 1
            },
            "name": "page",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Items Per Page",
              "minimum": 1.0,
              "type": "integer",
              "default": 100
            },
            "name": "items_per_page",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Time From",
              "type": "string",
              "format": "date-time"
            },
            "name": "time_from",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Time To",
              "type": "string",
              "format": "date-time"
            },
            "name": "time_to",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "X-Webtrit-Tenant-Id",
              "type": "string"
            },
            "name": "X-WebTrit-Tenant-ID",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserHistoryIndexResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetUserHistoryListUnauthorizedErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetUserHistoryListNotFoundErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetUserHistoryListUnprocessableEntityErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetUserHistoryListInternalServerErrorErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/v1/user/recordings/{recording_id}": {
      "get": {
        "tags": [
          "user"
        ],
        "summary": "Get User Recording",
        "operationId": "get_user_recording_api_v1_user_recordings__recording_id__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Recording Id",
              "type": "string"
            },
            "name": "recording_id",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "title": "X-Webtrit-Tenant-Id",
              "type": "string"
            },
            "name": "X-WebTrit-Tenant-ID",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetUserRecordingUnauthorizedErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetUserRecordingNotFoundErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetUserRecordingUnprocessableEntityErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetUserRecordingInternalServerErrorErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/v1/user/voicemails": {
      "get": {
        "tags": [
          "user"
        ],
        "summary": "Get User Voicemails",
        "operationId": "get_user_voicemails_api_v1_user_voicemails_get",
        "parameters": [
          {
            "required": false,
            "schema": {
              "title": "X-Webtrit-Tenant-Id",
              "type": "string"
            },
            "name": "X-WebTrit-Tenant-ID",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserVoicemailsResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserVoicemailUnauthorizedErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserVoicemailNotFoundErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserVoicemailInternalServerErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/v1/user/voicemails/{message_id}": {
      "get": {
        "tags": [
          "user"
        ],
        "summary": "Get User Voicemail Message Details",
        "operationId": "get_user_voicemail_message_details_api_v1_user_voicemails__message_id__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Message Id",
              "type": "string"
            },
            "name": "message_id",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "title": "X-Webtrit-Tenant-Id",
              "type": "string"
            },
            "name": "X-WebTrit-Tenant-ID",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VoicemailMessageDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserVoicemailDetailsUnauthorizedErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserVoicemailDetailsNotFoundErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserVoicemailDetailsInternalServerErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "user"
        ],
        "summary": "Delete User Voicemail Message",
        "operationId": "delete_user_voicemail_message_api_v1_user_voicemails__message_id__delete",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Message Id",
              "type": "string"
            },
            "name": "message_id",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "title": "X-Webtrit-Tenant-Id",
              "type": "string"
            },
            "name": "X-WebTrit-Tenant-ID",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserVoicemailMessageDeleteUnauthorizedErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserVoicemailMessageDeleteNotFoundErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserVoicemailMessageDeleteInternalServerErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      },
      "patch": {
        "tags": [
          "user"
        ],
        "summary": "Patch User Voicemail Message",
        "operationId": "patch_user_voicemail_message_api_v1_user_voicemails__message_id__patch",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Message Id",
              "type": "string"
            },
            "name": "message_id",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "title": "X-Webtrit-Tenant-Id",
              "type": "string"
            },
            "name": "X-WebTrit-Tenant-ID",
            "in": "header"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserVoicemailMessagePatch"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserVoicemailMessagePatch"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserVoicemailMessagePatchUnauthorizedErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserVoicemailMessagePatchNotFoundErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserVoicemailMessagePatchInternalServerErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/v1/user/voicemails/{message_id}/attachment": {
      "get": {
        "tags": [
          "user"
        ],
        "summary": "Get User Voicemail Message Attachment",
        "operationId": "get_user_voicemail_message_attachment_api_v1_user_voicemails__message_id__attachment_get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Message Id",
              "type": "string"
            },
            "name": "message_id",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "title": "File Format",
              "type": "string"
            },
            "name": "file_format",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "X-Webtrit-Tenant-Id",
              "type": "string"
            },
            "name": "X-WebTrit-Tenant-ID",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserVoicemailMessageAttachmentUnauthorizedErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserVoicemailMessageAttachmentNotFoundErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserVoicemailMessageAttachmentUnprocessableEntityErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserVoicemailMessageAttachmentInternalServerErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/v1/custom/public/{method_name}/{extra_path_params}": {
      "post": {
        "tags": [
          "custom"
        ],
        "summary": "Custom Method Public",
        "description": "The invocation of custom methods not explicitly defined in the documentation,\nexpanding functionality through predefined rules.",
        "operationId": "custom_method_public_api_v1_custom_public__method_name___extra_path_params__post",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Method Name",
              "type": "string"
            },
            "name": "method_name",
            "in": "path"
          },
          {
            "required": true,
            "schema": {
              "title": "Extra Path Params",
              "type": "string"
            },
            "name": "extra_path_params",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "title": "X-Webtrit-Tenant-Id",
              "type": "string"
            },
            "name": "X-WebTrit-Tenant-ID",
            "in": "header"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "Body",
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Custom Method Public Api V1 Custom Public  Method Name   Extra Path Params  Post",
                  "type": "object"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/custom/private/{method_name}/{extra_path_params}": {
      "post": {
        "tags": [
          "custom"
        ],
        "summary": "Custom Method Private",
        "description": "The invocation of custom methods with access token verification not explicitly\ndefined in the documentation, expanding functionality through predefined rules.",
        "operationId": "custom_method_private_api_v1_custom_private__method_name___extra_path_params__post",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Method Name",
              "type": "string"
            },
            "name": "method_name",
            "in": "path"
          },
          {
            "required": true,
            "schema": {
              "title": "Extra Path Params",
              "type": "string"
            },
            "name": "extra_path_params",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "title": "X-Webtrit-Tenant-Id",
              "type": "string"
            },
            "name": "X-WebTrit-Tenant-ID",
            "in": "header"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "Body",
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Custom Method Private Api V1 Custom Private  Method Name   Extra Path Params  Post",
                  "type": "object"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PrivateCustomUnauthorizedErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "AccessToken": {
        "title": "AccessToken",
        "type": "string",
        "description": "A short-lived token that grants access to the API resources.\n\nIt must be included as an Authorization header in the format `Bearer {access_token}` with each API request.\nThe `access_token` has an expiration date, so it needs to be refreshed periodically using a `refresh_token`\nto maintain uninterrupted access to the API without requiring the user to manually sign in again.\n\nPlease note that the `access_token` should be kept secure and not shared, as it grants access to the user's\ndata and actions within the API.\n"
      },
      "Balance": {
        "title": "Balance",
        "type": "object",
        "properties": {
          "amount": {
            "title": "Amount",
            "type": "number",
            "description": "The user's current balance.",
            "example": "50.00"
          },
          "balance_type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BalanceType"
              }
            ],
            "description": "Meaning of the balance figure for this user.\n\n* `inapplicable` means the **Adaptee** does not handle\n  billing and does not have the balance data.\n* `prepaid` means the number reflects the funds that\n  the user has available for spending.\n* `postpaid` means the balance reflects the amount of\n  previously accumulated charges (how much the user\n  owes - to be used in conjunction with a `credit_limit`).\n"
          },
          "credit_limit": {
            "title": "Credit Limit",
            "type": "number",
            "description": "The user's credit limit (if applicable).",
            "example": "100.00"
          },
          "currency": {
            "title": "Currency",
            "type": "string",
            "description": "Currency symbol or name in ISO 4217:2015 format (e.g. USD).",
            "default": "$",
            "example": "$"
          }
        }
      },
      "BalanceType": {
        "title": "BalanceType",
        "enum": [
          "unknown",
          "inapplicable",
          "prepaid",
          "postpaid"
        ],
        "description": "An enumeration."
      },
      "BinaryResponse": {
        "title": "BinaryResponse",
        "type": "string",
        "format": "binary"
      },
      "CDRInfo": {
        "title": "CDRInfo",
        "required": [
          "callee",
          "caller",
          "direction",
          "status"
        ],
        "type": "object",
        "properties": {
          "call_id": {
            "title": "Call Id",
            "type": "string",
            "description": "The field serves as the unique identifier for each call record.",
            "example": "b2YBUVAUT27eW4QmAd2yBSqG"
          },
          "callee": {
            "title": "Callee",
            "type": "string",
            "description": "The phone number of the called party (recipient of the call, CLD).",
            "example": "14155551234"
          },
          "caller": {
            "title": "Caller",
            "type": "string",
            "description": "The phone number of the calling party (originator of the call, CLI).",
            "example": "0001"
          },
          "connect_time": {
            "title": "Connect Time",
            "type": "string",
            "description": "Datetime of the call connection in ISO format.",
            "format": "date-time",
            "example": "2023-01-01T09:00:00Z"
          },
          "direction": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Direction"
              }
            ],
            "description": "Indicates the call direction."
          },
          "disconnect_reason": {
            "title": "Disconnect Reason",
            "type": "string",
            "description": "Describes the reason for the call disconnection.",
            "example": "Caller hangup"
          },
          "disconnect_time": {
            "title": "Disconnect Time",
            "type": "string",
            "description": "Datetime of the call disconnection in ISO format.",
            "format": "date-time",
            "example": "2023-01-01T09:01:00Z"
          },
          "duration": {
            "title": "Duration",
            "type": "integer",
            "description": "Call duration (in seconds), 0 for failed calls.",
            "example": 60
          },
          "recording_id": {
            "$ref": "#/components/schemas/CallRecordingId"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ConnectStatus"
              }
            ],
            "description": "Indicates the call status."
          }
        }
      },
      "CallRecordingId": {
        "title": "CallRecordingId",
        "type": "string",
        "description": "A unique identifier for a call recording, used to reference the recorded media of a specific call.\n"
      },
      "ConnectStatus": {
        "title": "ConnectStatus",
        "enum": [
          "accepted",
          "declined",
          "missed",
          "error"
        ],
        "description": "An enumeration."
      },
      "Contact": {
        "title": "Contact",
        "required": [
          "numbers"
        ],
        "type": "object",
        "properties": {
          "alias_name": {
            "title": "Alias Name",
            "type": "string",
            "description": "The user's alternative name. May be used for indicate role or position.",
            "example": "Receptionist"
          },
          "company_name": {
            "title": "Company Name",
            "type": "string",
            "description": "The name of the company the user is associated with.",
            "example": "Matrix"
          },
          "email": {
            "title": "Email",
            "type": "string",
            "description": "The user's email address.",
            "format": "email",
            "example": "a.black@matrix.com"
          },
          "first_name": {
            "title": "First Name",
            "type": "string",
            "description": "The user's first name.",
            "example": "Annabelle"
          },
          "last_name": {
            "title": "Last Name",
            "type": "string",
            "description": "The user's last name.",
            "example": "Black"
          },
          "numbers": {
            "$ref": "#/components/schemas/Numbers"
          },
          "sip_status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SipStatus"
              }
            ],
            "description": "The current registration status of the user on the SIP server."
          },
          "is_current_user": {
            "title": "Is Current User",
            "type": "boolean",
            "description": "Indicates whether the contact is associated with the same user who making the request."
          }
        }
      },
      "CreateSessionInternalServerErrorErrorResponse": {
        "title": "CreateSessionInternalServerErrorErrorResponse",
        "type": "object",
        "properties": {
          "code": {
            "title": "Code",
            "type": "string",
            "description": "`code` field values that are defined (but can be expanded) are:\n- `external_api_issue`"
          },
          "details": {
            "title": "Details",
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/Detail"
                },
                {
                  "type": "object"
                }
              ]
            },
            "description": "Additional details related to the error code, which depend on the specific error.\n"
          },
          "message": {
            "title": "Message",
            "type": "string",
            "description": "Description of the error."
          }
        }
      },
      "CreateSessionOtpInternalServerErrorErrorResponse": {
        "title": "CreateSessionOtpInternalServerErrorErrorResponse",
        "type": "object",
        "properties": {
          "code": {
            "title": "Code",
            "type": "string",
            "description": "`code` field values that are defined (but can be expanded) are:\n- `external_api_issue`"
          },
          "details": {
            "title": "Details",
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/Detail"
                },
                {
                  "type": "object"
                }
              ]
            },
            "description": "Additional details related to the error code, which depend on the specific error.\n"
          },
          "message": {
            "title": "Message",
            "type": "string",
            "description": "Description of the error."
          }
        }
      },
      "CreateSessionOtpNotFoundErrorResponse": {
        "title": "CreateSessionOtpNotFoundErrorResponse",
        "type": "object",
        "properties": {
          "code": {
            "title": "Code",
            "type": "string",
            "description": "`code` field values that are defined (but can be expanded) are:\n- `user_not_found`"
          },
          "details": {
            "title": "Details",
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/Detail"
                },
                {
                  "type": "object"
                }
              ]
            },
            "description": "Additional details related to the error code, which depend on the specific error.\n"
          },
          "message": {
            "title": "Message",
            "type": "string",
            "description": "Description of the error."
          }
        }
      },
      "CreateSessionOtpUnprocessableEntityErrorResponse": {
        "title": "CreateSessionOtpUnprocessableEntityErrorResponse",
        "type": "object",
        "properties": {
          "code": {
            "title": "Code",
            "type": "string",
            "description": "`code` field values that are defined (but can be expanded) are:\n- `validation_error`\n- `delivery_channel_unspecified`"
          },
          "details": {
            "title": "Details",
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/Detail"
                },
                {
                  "type": "object"
                }
              ]
            },
            "description": "Additional details related to the error code, which depend on the specific error.\n"
          },
          "message": {
            "title": "Message",
            "type": "string",
            "description": "Description of the error."
          }
        }
      },
      "CreateSessionUnauthorizedErrorResponse": {
        "title": "CreateSessionUnauthorizedErrorResponse",
        "type": "object",
        "properties": {
          "code": {
            "title": "Code",
            "type": "string",
            "description": "`code` field values that are defined (but can be expanded) are:\n- `incorrect_credentials`"
          },
          "details": {
            "title": "Details",
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/Detail"
                },
                {
                  "type": "object"
                }
              ]
            },
            "description": "Additional details related to the error code, which depend on the specific error.\n"
          },
          "message": {
            "title": "Message",
            "type": "string",
            "description": "Description of the error."
          }
        }
      },
      "CreateSessionUnprocessableEntityErrorResponse": {
        "title": "CreateSessionUnprocessableEntityErrorResponse",
        "type": "object",
        "properties": {
          "code": {
            "title": "Code",
            "type": "string",
            "description": "`code` field values that are defined (but can be expanded) are:\n- `validation_error`"
          },
          "details": {
            "title": "Details",
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/Detail"
                },
                {
                  "type": "object"
                }
              ]
            },
            "description": "Additional details related to the error code, which depend on the specific error.\n"
          },
          "message": {
            "title": "Message",
            "type": "string",
            "description": "Description of the error."
          }
        }
      },
      "CreateUserInternalServerErrorErrorResponse": {
        "title": "CreateUserInternalServerErrorErrorResponse",
        "type": "object",
        "properties": {
          "code": {
            "title": "Code",
            "type": "string",
            "description": "`code` field values that are defined (but can be expanded) are:\n- `external_api_issue`"
          },
          "details": {
            "title": "Details",
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/Detail"
                },
                {
                  "type": "object"
                }
              ]
            },
            "description": "Additional details related to the error code, which depend on the specific error.\n"
          },
          "message": {
            "title": "Message",
            "type": "string",
            "description": "Description of the error."
          }
        }
      },
      "CreateUserMethodNotAllowedErrorResponse": {
        "title": "CreateUserMethodNotAllowedErrorResponse",
        "type": "object",
        "properties": {
          "code": {
            "title": "Code",
            "type": "string",
            "description": "`code` field values that are defined (but can be expanded) are:\n- `signup_disabled`"
          },
          "details": {
            "title": "Details",
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/Detail"
                },
                {
                  "type": "object"
                }
              ]
            },
            "description": "Additional details related to the error code, which depend on the specific error.\n"
          },
          "message": {
            "title": "Message",
            "type": "string",
            "description": "Description of the error."
          }
        }
      },
      "CreateUserUnprocessableEntityErrorResponse": {
        "title": "CreateUserUnprocessableEntityErrorResponse",
        "type": "object",
        "properties": {
          "code": {
            "title": "Code",
            "type": "string",
            "description": "`code` field values that are defined (but can be expanded) are:\n- `validation_error`\n- `signup_limit_reached`"
          },
          "details": {
            "title": "Details",
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/Detail"
                },
                {
                  "type": "object"
                }
              ]
            },
            "description": "Additional details related to the error code, which depend on the specific error.\n"
          },
          "message": {
            "title": "Message",
            "type": "string",
            "description": "Description of the error."
          }
        }
      },
      "DeleteSessionInternalServerErrorErrorResponse": {
        "title": "DeleteSessionInternalServerErrorErrorResponse",
        "type": "object",
        "properties": {
          "code": {
            "title": "Code",
            "type": "string",
            "description": "`code` field values that are defined (but can be expanded) are:\n- `external_api_issue`"
          },
          "details": {
            "title": "Details",
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/Detail"
                },
                {
                  "type": "object"
                }
              ]
            },
            "description": "Additional details related to the error code, which depend on the specific error.\n"
          },
          "message": {
            "title": "Message",
            "type": "string",
            "description": "Description of the error."
          }
        }
      },
      "DeleteSessionNotFoundErrorResponse": {
        "title": "DeleteSessionNotFoundErrorResponse",
        "type": "object",
        "properties": {
          "code": {
            "title": "Code",
            "type": "string",
            "description": "`code` field values that are defined (but can be expanded) are:\n- `session_not_found`"
          },
          "details": {
            "title": "Details",
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/Detail"
                },
                {
                  "type": "object"
                }
              ]
            },
            "description": "Additional details related to the error code, which depend on the specific error.\n"
          },
          "message": {
            "title": "Message",
            "type": "string",
            "description": "Description of the error."
          }
        }
      },
      "DeleteSessionUnauthorizedErrorResponse": {
        "title": "DeleteSessionUnauthorizedErrorResponse",
        "type": "object",
        "properties": {
          "code": {
            "title": "Code",
            "type": "string",
            "description": "`code` field values that are defined (but can be expanded) are:\n- `authorization_header_missing`\n- `bearer_credentials_missing`\n- `access_token_invalid`\n- `access_token_expired`\n- `unknown`"
          },
          "details": {
            "title": "Details",
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/Detail"
                },
                {
                  "type": "object"
                }
              ]
            },
            "description": "Additional details related to the error code, which depend on the specific error.\n"
          },
          "message": {
            "title": "Message",
            "type": "string",
            "description": "Description of the error."
          }
        }
      },
      "DeliveryChannel": {
        "title": "DeliveryChannel",
        "enum": [
          "email",
          "sms",
          "call",
          "other"
        ],
        "description": "An enumeration."
      },
      "Detail": {
        "title": "Detail",
        "type": "object",
        "properties": {
          "path": {
            "title": "Path",
            "type": "string"
          },
          "reason": {
            "title": "Reason",
            "type": "string"
          }
        }
      },
      "Direction": {
        "title": "Direction",
        "enum": [
          "incoming",
          "outgoing"
        ],
        "description": "An enumeration."
      },
      "GetSystemInfoInternalServerErrorErrorResponse": {
        "title": "GetSystemInfoInternalServerErrorErrorResponse",
        "type": "object",
        "properties": {
          "code": {
            "title": "Code",
            "type": "string",
            "description": "`code` field values that are defined (but can be expanded) are:\n- `external_api_issue`"
          },
          "details": {
            "title": "Details",
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/Detail"
                },
                {
                  "type": "object"
                }
              ]
            },
            "description": "Additional details related to the error code, which depend on the specific error.\n"
          },
          "message": {
            "title": "Message",
            "type": "string",
            "description": "Description of the error."
          }
        }
      },
      "GetUserContactListInternalServerErrorErrorResponse": {
        "title": "GetUserContactListInternalServerErrorErrorResponse",
        "type": "object",
        "properties": {
          "code": {
            "title": "Code",
            "type": "string",
            "description": "`code` field values that are defined (but can be expanded) are:\n- `external_api_issue`"
          },
          "details": {
            "title": "Details",
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/Detail"
                },
                {
                  "type": "object"
                }
              ]
            },
            "description": "Additional details related to the error code, which depend on the specific error.\n"
          },
          "message": {
            "title": "Message",
            "type": "string",
            "description": "Description of the error."
          }
        }
      },
      "GetUserContactListNotFoundErrorResponse": {
        "title": "GetUserContactListNotFoundErrorResponse",
        "type": "object",
        "properties": {
          "code": {
            "title": "Code",
            "type": "string",
            "description": "`code` field values that are defined (but can be expanded) are:\n- `session_not_found`\n- `user_not_found`"
          },
          "details": {
            "title": "Details",
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/Detail"
                },
                {
                  "type": "object"
                }
              ]
            },
            "description": "Additional details related to the error code, which depend on the specific error.\n"
          },
          "message": {
            "title": "Message",
            "type": "string",
            "description": "Description of the error."
          }
        }
      },
      "GetUserContactListUnauthorizedErrorResponse": {
        "title": "GetUserContactListUnauthorizedErrorResponse",
        "type": "object",
        "properties": {
          "code": {
            "title": "Code",
            "type": "string",
            "description": "`code` field values that are defined (but can be expanded) are:\n- `authorization_header_missing`\n- `bearer_credentials_missing`\n- `access_token_invalid`\n- `access_token_expired`\n- `unknown`"
          },
          "details": {
            "title": "Details",
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/Detail"
                },
                {
                  "type": "object"
                }
              ]
            },
            "description": "Additional details related to the error code, which depend on the specific error.\n"
          },
          "message": {
            "title": "Message",
            "type": "string",
            "description": "Description of the error."
          }
        }
      },
      "GetUserContactListUnprocessableEntityErrorResponse": {
        "title": "GetUserContactListUnprocessableEntityErrorResponse",
        "type": "object",
        "properties": {
          "code": {
            "title": "Code",
            "type": "string",
            "description": "`code` field values that are defined (but can be expanded) are:\n- `validation_error`"
          },
          "details": {
            "title": "Details",
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/Detail"
                },
                {
                  "type": "object"
                }
              ]
            },
            "description": "Additional details related to the error code, which depend on the specific error.\n"
          },
          "message": {
            "title": "Message",
            "type": "string",
            "description": "Description of the error."
          }
        }
      },
      "GetUserHistoryListInternalServerErrorErrorResponse": {
        "title": "GetUserHistoryListInternalServerErrorErrorResponse",
        "type": "object",
        "properties": {
          "code": {
            "title": "Code",
            "type": "string",
            "description": "`code` field values that are defined (but can be expanded) are:\n- `external_api_issue`"
          },
          "details": {
            "title": "Details",
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/Detail"
                },
                {
                  "type": "object"
                }
              ]
            },
            "description": "Additional details related to the error code, which depend on the specific error.\n"
          },
          "message": {
            "title": "Message",
            "type": "string",
            "description": "Description of the error."
          }
        }
      },
      "GetUserHistoryListNotFoundErrorResponse": {
        "title": "GetUserHistoryListNotFoundErrorResponse",
        "type": "object",
        "properties": {
          "code": {
            "title": "Code",
            "type": "string",
            "description": "`code` field values that are defined (but can be expanded) are:\n- `session_not_found`\n- `user_not_found`"
          },
          "details": {
            "title": "Details",
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/Detail"
                },
                {
                  "type": "object"
                }
              ]
            },
            "description": "Additional details related to the error code, which depend on the specific error.\n"
          },
          "message": {
            "title": "Message",
            "type": "string",
            "description": "Description of the error."
          }
        }
      },
      "GetUserHistoryListUnauthorizedErrorResponse": {
        "title": "GetUserHistoryListUnauthorizedErrorResponse",
        "type": "object",
        "properties": {
          "code": {
            "title": "Code",
            "type": "string",
            "description": "`code` field values that are defined (but can be expanded) are:\n- `authorization_header_missing`\n- `bearer_credentials_missing`\n- `access_token_invalid`\n- `access_token_expired`\n- `unknown`"
          },
          "details": {
            "title": "Details",
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/Detail"
                },
                {
                  "type": "object"
                }
              ]
            },
            "description": "Additional details related to the error code, which depend on the specific error.\n"
          },
          "message": {
            "title": "Message",
            "type": "string",
            "description": "Description of the error."
          }
        }
      },
      "GetUserHistoryListUnprocessableEntityErrorResponse": {
        "title": "GetUserHistoryListUnprocessableEntityErrorResponse",
        "type": "object",
        "properties": {
          "code": {
            "title": "Code",
            "type": "string",
            "description": "`code` field values that are defined (but can be expanded) are:\n- `validation_error`"
          },
          "details": {
            "title": "Details",
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/Detail"
                },
                {
                  "type": "object"
                }
              ]
            },
            "description": "Additional details related to the error code, which depend on the specific error.\n"
          },
          "message": {
            "title": "Message",
            "type": "string",
            "description": "Description of the error."
          }
        }
      },
      "GetUserInfoInternalServerErrorErrorResponse": {
        "title": "GetUserInfoInternalServerErrorErrorResponse",
        "type": "object",
        "properties": {
          "code": {
            "title": "Code",
            "type": "string",
            "description": "`code` field values that are defined (but can be expanded) are:\n- `external_api_issue`"
          },
          "details": {
            "title": "Details",
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/Detail"
                },
                {
                  "type": "object"
                }
              ]
            },
            "description": "Additional details related to the error code, which depend on the specific error.\n"
          },
          "message": {
            "title": "Message",
            "type": "string",
            "description": "Description of the error."
          }
        }
      },
      "GetUserInfoNotFoundErrorResponse": {
        "title": "GetUserInfoNotFoundErrorResponse",
        "type": "object",
        "properties": {
          "code": {
            "title": "Code",
            "type": "string",
            "description": "`code` field values that are defined (but can be expanded) are:\n- `session_not_found`\n- `user_not_found`"
          },
          "details": {
            "title": "Details",
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/Detail"
                },
                {
                  "type": "object"
                }
              ]
            },
            "description": "Additional details related to the error code, which depend on the specific error.\n"
          },
          "message": {
            "title": "Message",
            "type": "string",
            "description": "Description of the error."
          }
        }
      },
      "GetUserInfoUnauthorizedErrorResponse": {
        "title": "GetUserInfoUnauthorizedErrorResponse",
        "type": "object",
        "properties": {
          "code": {
            "title": "Code",
            "type": "string",
            "description": "`code` field values that are defined (but can be expanded) are:\n- `authorization_header_missing`\n- `bearer_credentials_missing`\n- `access_token_invalid`\n- `access_token_expired`\n- `unknown`"
          },
          "details": {
            "title": "Details",
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/Detail"
                },
                {
                  "type": "object"
                }
              ]
            },
            "description": "Additional details related to the error code, which depend on the specific error.\n"
          },
          "message": {
            "title": "Message",
            "type": "string",
            "description": "Description of the error."
          }
        }
      },
      "GetUserInfoUnprocessableEntityErrorResponse": {
        "title": "GetUserInfoUnprocessableEntityErrorResponse",
        "type": "object",
        "properties": {
          "code": {
            "title": "Code",
            "type": "string",
            "description": "`code` field values that are defined (but can be expanded) are:\n- `validation_error`"
          },
          "details": {
            "title": "Details",
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/Detail"
                },
                {
                  "type": "object"
                }
              ]
            },
            "description": "Additional details related to the error code, which depend on the specific error.\n"
          },
          "message": {
            "title": "Message",
            "type": "string",
            "description": "Description of the error."
          }
        }
      },
      "GetUserRecordingInternalServerErrorErrorResponse": {
        "title": "GetUserRecordingInternalServerErrorErrorResponse",
        "type": "object",
        "properties": {
          "code": {
            "title": "Code",
            "type": "string",
            "description": "`code` field values that are defined (but can be expanded) are:\n- `external_api_issue`"
          },
          "details": {
            "title": "Details",
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/Detail"
                },
                {
                  "type": "object"
                }
              ]
            },
            "description": "Additional details related to the error code, which depend on the specific error.\n"
          },
          "message": {
            "title": "Message",
            "type": "string",
            "description": "Description of the error."
          }
        }
      },
      "GetUserRecordingNotFoundErrorResponse": {
        "title": "GetUserRecordingNotFoundErrorResponse",
        "type": "object",
        "properties": {
          "code": {
            "title": "Code",
            "type": "string",
            "description": "Additional error code identifier to help better handle\n                                            situations that fall within the same HTTP error code.\n                                            E.g. a request to login is denied with 401 HTTP error\n                                            but the code will additionally indicate the specific\n                                            reason: username / password are incorrect or the user's\n                                            account has been administratively blocked. This code will\n                                            be passed to the client, so the app can show a proper message on UI"
          },
          "details": {
            "title": "Details",
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/Detail"
                },
                {
                  "type": "object"
                }
              ]
            },
            "description": "Additional details related to the error code, which depend on the specific error.\n"
          },
          "message": {
            "title": "Message",
            "type": "string",
            "description": "Description of the error."
          }
        }
      },
      "GetUserRecordingUnauthorizedErrorResponse": {
        "title": "GetUserRecordingUnauthorizedErrorResponse",
        "type": "object",
        "properties": {
          "code": {
            "title": "Code",
            "type": "string",
            "description": "`code` field values that are defined (but can be expanded) are:\n- `authorization_header_missing`\n- `bearer_credentials_missing`\n- `access_token_invalid`\n- `access_token_expired`\n- `unknown`"
          },
          "details": {
            "title": "Details",
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/Detail"
                },
                {
                  "type": "object"
                }
              ]
            },
            "description": "Additional details related to the error code, which depend on the specific error.\n"
          },
          "message": {
            "title": "Message",
            "type": "string",
            "description": "Description of the error."
          }
        }
      },
      "GetUserRecordingUnprocessableEntityErrorResponse": {
        "title": "GetUserRecordingUnprocessableEntityErrorResponse",
        "type": "object",
        "properties": {
          "code": {
            "title": "Code",
            "type": "string",
            "description": "`code` field values that are defined (but can be expanded) are:\n- `validation_error`"
          },
          "details": {
            "title": "Details",
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/Detail"
                },
                {
                  "type": "object"
                }
              ]
            },
            "description": "Additional details related to the error code, which depend on the specific error.\n"
          },
          "message": {
            "title": "Message",
            "type": "string",
            "description": "Description of the error."
          }
        }
      },
      "HTTPValidationError": {
        "title": "HTTPValidationError",
        "type": "object",
        "properties": {
          "detail": {
            "title": "Detail",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            }
          }
        }
      },
      "Health": {
        "title": "Health",
        "type": "object",
        "properties": {
          "status": {
            "title": "Status",
            "type": "string",
            "description": "A response from the server.",
            "example": "OK"
          }
        }
      },
      "Numbers": {
        "title": "Numbers",
        "required": [
          "main"
        ],
        "type": "object",
        "properties": {
          "additional": {
            "title": "Additional",
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "A list of other phone numbers associated with the user. This may\ninclude extra phone numbers that the user purchased (also called\ndirect-inward-dials or DID) to ring on their VoIP phone,\nand other numbers that can be used to identify them in the\naddress book of others (e.g. their mobile number).\n",
            "example": [
              "380441234567",
              "34911234567"
            ]
          },
          "ext": {
            "title": "Ext",
            "type": "string",
            "description": "The user's extension number (short dialing code) within the **Adaptee**.\n",
            "example": "0001"
          },
          "main": {
            "title": "Main",
            "type": "string",
            "description": "The user's primary phone number. It is strongly suggested\nto use the full number, including the country code\n(also known as the E.164 format).\n",
            "example": "14155551234"
          }
        }
      },
      "OtpId": {
        "title": "OtpId",
        "type": "string",
        "description": "Unique identifier of the OTP request on the **Adapter** and/or **Adaptee** side.\n\nNote: This ID is NOT the code that the user will enter. It serves\nto match the originally generated OTP with the one provided by the user.\n",
        "example": "12345678-9abc-def0-1234-56789abcdef0"
      },
      "Pagination": {
        "title": "Pagination",
        "type": "object",
        "properties": {
          "items_per_page": {
            "title": "Items Per Page",
            "minimum": 1.0,
            "type": "integer",
            "description": "Number of items presented per page.",
            "example": 100
          },
          "items_total": {
            "title": "Items Total",
            "minimum": 0.0,
            "type": "integer",
            "description": "Total number of items found in filtered result set.\nIf no filters are provided, this represents total number\nof items available.\n",
            "example": 1000
          },
          "page": {
            "title": "Page",
            "minimum": 1.0,
            "type": "integer",
            "description": "Current page number.",
            "example": 1
          }
        }
      },
      "PrivateCustomUnauthorizedErrorResponse": {
        "title": "PrivateCustomUnauthorizedErrorResponse",
        "type": "object",
        "properties": {
          "code": {
            "title": "Code",
            "type": "string",
            "description": "`code` field values that are defined (but can be expanded) are:\n- `authorization_header_missing`\n- `bearer_credentials_missing`\n- `access_token_invalid`\n- `access_token_expired`\n- `unknown`"
          },
          "details": {
            "title": "Details",
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/Detail"
                },
                {
                  "type": "object"
                }
              ]
            },
            "description": "Additional details related to the error code, which depend on the specific error.\n"
          },
          "message": {
            "title": "Message",
            "type": "string",
            "description": "Description of the error."
          }
        }
      },
      "ProvisionSessionAutoInternalServerErrorErrorResponse": {
        "title": "ProvisionSessionAutoInternalServerErrorErrorResponse",
        "type": "object",
        "properties": {
          "code": {
            "title": "Code",
            "type": "string",
            "description": "`code` field values that are defined (but can be expanded) are:\n- `external_api_issue`"
          },
          "details": {
            "title": "Details",
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/Detail"
                },
                {
                  "type": "object"
                }
              ]
            },
            "description": "Additional details related to the error code, which depend on the specific error.\n"
          },
          "message": {
            "title": "Message",
            "type": "string",
            "description": "Description of the error."
          }
        }
      },
      "ProvisionSessionAutoNotImplementedErrorResponse": {
        "title": "ProvisionSessionAutoNotImplementedErrorResponse",
        "type": "object",
        "properties": {
          "code": {
            "title": "Code",
            "type": "string",
            "description": "`code` field values that are defined (but can be expanded) are:\n- `functionality_not_implemented`"
          },
          "details": {
            "title": "Details",
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/Detail"
                },
                {
                  "type": "object"
                }
              ]
            },
            "description": "Additional details related to the error code, which depend on the specific error.\n"
          },
          "message": {
            "title": "Message",
            "type": "string",
            "description": "Description of the error."
          }
        }
      },
      "ProvisionSessionAutoUnauthorizedErrorResponse": {
        "title": "ProvisionSessionAutoUnauthorizedErrorResponse",
        "type": "object",
        "properties": {
          "code": {
            "title": "Code",
            "type": "string",
            "description": "`code` field values that are defined (but can be expanded) are:\n- `incorrect_credentials`"
          },
          "details": {
            "title": "Details",
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/Detail"
                },
                {
                  "type": "object"
                }
              ]
            },
            "description": "Additional details related to the error code, which depend on the specific error.\n"
          },
          "message": {
            "title": "Message",
            "type": "string",
            "description": "Description of the error."
          }
        }
      },
      "ProvisionSessionAutoUnprocessableEntityErrorResponse": {
        "title": "ProvisionSessionAutoUnprocessableEntityErrorResponse",
        "type": "object",
        "properties": {
          "code": {
            "title": "Code",
            "type": "string",
            "description": "`code` field values that are defined (but can be expanded) are:\n- `validation_error`"
          },
          "details": {
            "title": "Details",
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/Detail"
                },
                {
                  "type": "object"
                }
              ]
            },
            "description": "Additional details related to the error code, which depend on the specific error.\n"
          },
          "message": {
            "title": "Message",
            "type": "string",
            "description": "Description of the error."
          }
        }
      },
      "RefreshToken": {
        "title": "RefreshToken",
        "type": "string",
        "description": "A single-use token for refreshing the API session and obtaining a new `access_token`.\n\nWhen the current `access_token` is close to expiration or has already expired, the\n`refresh_token` can be exchanged for a new `access_token`, ensuring uninterrupted access\nto the API without requiring the user to manually sign in again.\n\nPlease note that each `refresh_token` can only be used once, and a new `refresh_token`\nwill be issued along with the new `access_token`.\n"
      },
      "SessionAutoProvisionRequest": {
        "title": "SessionAutoProvisionRequest",
        "required": [
          "config_token"
        ],
        "type": "object",
        "properties": {
          "config_token": {
            "title": "Config Token",
            "type": "string",
            "description": "URL encoded unique token to identify user on the **Adaptee**.",
            "example": "YKnra0qV3FHeOeMNwotRoP0955gHHHy7y7BWeb"
          }
        }
      },
      "SessionCreateRequest": {
        "title": "SessionCreateRequest",
        "required": [
          "login",
          "password"
        ],
        "type": "object",
        "properties": {
          "login": {
            "title": "Login",
            "type": "string",
            "description": "User's `login` on the **Adaptee**."
          },
          "password": {
            "title": "Password",
            "type": "string",
            "description": "User's `password` on the **Adaptee**."
          }
        }
      },
      "SessionInfo": {
        "title": "SessionInfo",
        "required": [
          "access_token",
          "user_id"
        ],
        "type": "object",
        "properties": {
          "access_token": {
            "$ref": "#/components/schemas/AccessToken"
          },
          "refresh_token": {
            "$ref": "#/components/schemas/RefreshToken"
          },
          "user_id": {
            "$ref": "#/components/schemas/UserId"
          },
          "expires_at": {
            "title": "Expires At",
            "type": "string",
            "format": "date-time"
          },
          "tenant_id": {
            "title": "Tenant Id",
            "type": "string"
          }
        },
        "description": "Info about a session, initiated by WebTrit core on behalf of user"
      },
      "SessionOtpCreateRequest": {
        "title": "SessionOtpCreateRequest",
        "required": [
          "user_ref"
        ],
        "type": "object",
        "properties": {
          "user_ref": {
            "$ref": "#/components/schemas/UserRef"
          }
        }
      },
      "SessionOtpCreateResponse": {
        "title": "SessionOtpCreateResponse",
        "required": [
          "otp_id"
        ],
        "type": "object",
        "properties": {
          "delivery_channel": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DeliveryChannel"
              }
            ],
            "description": "Specifies the channel used to deliver the OTP to the user\n(e.g., email, SMS, call, or other). This information helps guide the\nuser on where to find the OTP.\n"
          },
          "delivery_from": {
            "title": "Delivery From",
            "type": "string",
            "description": "Identifies the sender of the OTP, making it easier for the user to\nlocate the correct message. Depending on the `delivery_channel`, this\nvalue may be an email address, phone number, or a description of an\nalternative method. In the case of email, if the message is marked as\nspam, the user can add this address to a whitelist for future\nreference.\n"
          },
          "otp_id": {
            "$ref": "#/components/schemas/OtpId"
          }
        }
      },
      "SessionOtpVerifyRequest": {
        "title": "SessionOtpVerifyRequest",
        "required": [
          "code",
          "otp_id"
        ],
        "type": "object",
        "properties": {
          "code": {
            "title": "Code",
            "type": "string",
            "description": "Code (one-time-password) that the end-user receives from\nthe **Adaptee** via email/SMS and then uses in\napplication to confirm his/her identity and login.\n"
          },
          "otp_id": {
            "$ref": "#/components/schemas/OtpId"
          }
        }
      },
      "SessionResponse": {
        "title": "SessionResponse",
        "required": [
          "access_token",
          "user_id"
        ],
        "type": "object",
        "properties": {
          "access_token": {
            "$ref": "#/components/schemas/AccessToken"
          },
          "refresh_token": {
            "$ref": "#/components/schemas/RefreshToken"
          },
          "user_id": {
            "$ref": "#/components/schemas/UserId"
          }
        }
      },
      "SessionUpdateRequest": {
        "title": "SessionUpdateRequest",
        "required": [
          "refresh_token"
        ],
        "type": "object",
        "properties": {
          "refresh_token": {
            "$ref": "#/components/schemas/RefreshToken"
          }
        }
      },
      "SipInfo": {
        "title": "SipInfo",
        "required": [
          "password",
          "sip_server",
          "username"
        ],
        "type": "object",
        "properties": {
          "auth_username": {
            "title": "Auth Username",
            "type": "string",
            "description": "The username for SIP authorization;\nonly needs to be populated if for a user it differs\nfrom his/her registration ID (which is normally a phone number) supplied in the `username` attribute.\n",
            "example": "thomas"
          },
          "display_name": {
            "title": "Display Name",
            "type": "string",
            "description": "The visible identification of the caller to be included in the SIP request.\nThis will be shown to the called party as the caller's name. If not provided,\nthe `display_name` will be populated with the `username`.\n",
            "example": "Thomas A. Anderson"
          },
          "password": {
            "title": "Password",
            "type": "string",
            "description": "The password for the SIP account.",
            "example": "strong_password"
          },
          "registration_server": {
            "$ref": "#/components/schemas/SipServer"
          },
          "sip_server": {
            "$ref": "#/components/schemas/SipServer"
          },
          "username": {
            "title": "Username",
            "type": "string",
            "description": "The identity (typically a phone number but can be some other alphanumeric ID)\nthat should be registered to SIP server to receive incoming calls.\nUsually it is also used as a username for SIP authorization of registrations (SIP REGISTER)\nand outgoing calls (SIP INVITE).\n",
            "example": "14155551234"
          }
        }
      },
      "SipServer": {
        "title": "SipServer",
        "required": [
          "host"
        ],
        "type": "object",
        "properties": {
          "force_tcp": {
            "title": "Force Tcp",
            "type": "boolean",
            "description": "If set to true, forces the use of TCP for SIP messaging.",
            "example": false
          },
          "host": {
            "title": "Host",
            "type": "string",
            "description": "The SIP server address, which can be either a hostname or an IP address.",
            "example": "sip.webtrit.com"
          },
          "port": {
            "title": "Port",
            "type": "integer",
            "description": "The port on which the SIP server listens for incoming requests.",
            "example": 5060
          }
        }
      },
      "SipStatus": {
        "title": "SipStatus",
        "enum": [
          "registered",
          "notregistered"
        ],
        "description": "An enumeration."
      },
      "Status": {
        "title": "Status",
        "enum": [
          "active",
          "limited",
          "blocked"
        ],
        "description": "An enumeration."
      },
      "SupportedEnum": {
        "title": "SupportedEnum",
        "enum": [
          "signup",
          "otpSignin",
          "passwordSignin",
          "autoProvision",
          "customMethods",
          "recordings",
          "callHistory",
          "extensions",
          "voicemail"
        ],
        "description": "An enumeration."
      },
      "SystemInfoShowResponse": {
        "title": "SystemInfoShowResponse",
        "required": [
          "name",
          "supported",
          "version"
        ],
        "type": "object",
        "properties": {
          "custom": {
            "title": "Custom",
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Additional custom key-value pairs providing extended information about\nthe **Adaptee** and/or its environment.\n"
          },
          "name": {
            "title": "Name",
            "type": "string"
          },
          "supported": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SupportedEnum"
            },
            "description": "A list of supported functionalities by the **Adaptee**.\n\nPossible functionalities values:\n* `signup` - supports the creation of new customer accounts\n* `otpSignin` - allows user authorization via One-Time Password (OTP)\n* `passwordSignin` - allows user authorization using login and password\n* `autoProvision` - allows user authorization using config token\n* `recordings` - provides access to call recordings\n* `callHistory` - provides access to call history\n* `extensions` - retrieves the list of other users (contacts)\n"
          },
          "version": {
            "title": "Version",
            "type": "string"
          }
        }
      },
      "UpdateSessionInternalServerErrorErrorResponse": {
        "title": "UpdateSessionInternalServerErrorErrorResponse",
        "type": "object",
        "properties": {
          "code": {
            "title": "Code",
            "type": "string",
            "description": "`code` field values that are defined (but can be expanded) are:\n- `external_api_issue`"
          },
          "details": {
            "title": "Details",
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/Detail"
                },
                {
                  "type": "object"
                }
              ]
            },
            "description": "Additional details related to the error code, which depend on the specific error.\n"
          },
          "message": {
            "title": "Message",
            "type": "string",
            "description": "Description of the error."
          }
        }
      },
      "UpdateSessionNotFoundErrorResponse": {
        "title": "UpdateSessionNotFoundErrorResponse",
        "type": "object",
        "properties": {
          "code": {
            "title": "Code",
            "type": "string",
            "description": "`code` field values that are defined (but can be expanded) are:\n- `session_not_found`"
          },
          "details": {
            "title": "Details",
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/Detail"
                },
                {
                  "type": "object"
                }
              ]
            },
            "description": "Additional details related to the error code, which depend on the specific error.\n"
          },
          "message": {
            "title": "Message",
            "type": "string",
            "description": "Description of the error."
          }
        }
      },
      "UpdateSessionUnprocessableEntityErrorResponse": {
        "title": "UpdateSessionUnprocessableEntityErrorResponse",
        "type": "object",
        "properties": {
          "code": {
            "title": "Code",
            "type": "string",
            "description": "`code` field values that are defined (but can be expanded) are:\n- `validation_error`\n- `refresh_token_invalid`\n- `refresh_token_expired`\n- `unknown`"
          },
          "details": {
            "title": "Details",
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/Detail"
                },
                {
                  "type": "object"
                }
              ]
            },
            "description": "Additional details related to the error code, which depend on the specific error.\n"
          },
          "message": {
            "title": "Message",
            "type": "string",
            "description": "Description of the error."
          }
        }
      },
      "UserContactIndexResponse": {
        "title": "UserContactIndexResponse",
        "type": "object",
        "properties": {
          "items": {
            "title": "Items",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Contact"
            }
          }
        }
      },
      "UserCreateResponse": {
        "title": "UserCreateResponse",
        "anyOf": [
          {
            "type": "object"
          },
          {
            "$ref": "#/components/schemas/SessionOtpCreateResponse"
          },
          {
            "$ref": "#/components/schemas/SessionResponse"
          }
        ]
      },
      "UserHistoryIndexResponse": {
        "title": "UserHistoryIndexResponse",
        "type": "object",
        "properties": {
          "items": {
            "title": "Items",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CDRInfo"
            }
          },
          "pagination": {
            "$ref": "#/components/schemas/Pagination"
          }
        }
      },
      "UserId": {
        "title": "UserId",
        "type": "string",
        "description": "A primary unique identifier of the user on the **Adaptee**.\n\nThis identifier is crucial for the proper functioning of **WebTrit Core**, as it is used\nto store information such as push tokens and other relevant data associated to the user.\n\nThe **Adaptee** must consistently return the same `UserId` for the same user,\nregardless of the `UserRef` used for sign-in.\n",
        "example": "123456789abcdef0123456789abcdef0"
      },
      "UserInfoShowResponse": {
        "title": "UserInfoShowResponse",
        "required": [
          "numbers",
          "sip"
        ],
        "type": "object",
        "properties": {
          "alias_name": {
            "title": "Alias Name",
            "type": "string",
            "description": "The user's alternative name. May be used for indicate role or position.",
            "example": "CTO"
          },
          "balance": {
            "$ref": "#/components/schemas/Balance"
          },
          "company_name": {
            "title": "Company Name",
            "type": "string",
            "description": "The company the user is associated with.",
            "example": "Matrix"
          },
          "email": {
            "title": "Email",
            "type": "string",
            "description": "The user's email address.",
            "format": "email",
            "example": "neo@matrix.com"
          },
          "first_name": {
            "title": "First Name",
            "type": "string",
            "description": "The user's first name.",
            "example": "Thomas"
          },
          "last_name": {
            "title": "Last Name",
            "type": "string",
            "description": "The user's last name.",
            "example": "Anderson"
          },
          "numbers": {
            "$ref": "#/components/schemas/Numbers"
          },
          "sip": {
            "$ref": "#/components/schemas/SipInfo"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Status"
              }
            ],
            "description": "The user's account status.\n\n* `active`, the user is in an active state and has full access to all functionality\n  (this is the default value and will be assumed if this property is not specified)\n* `limited`, indicates a condition of restricted functionality access\n  (while sign-in and API calls may be allowed, call capabilities could\n  be partially or fully restricted)\n* `blocked`, denotes a state in which the user is blocked, and as a result,\n  client applications won't be able to sign in and will be signed out if\n  previously signed in\n  (API calls might be partially available, but call capabilities are fully\n  restricted)\n\nNote that the number of possible values may be expanded in the future.\n",
            "default": "active"
          },
          "time_zone": {
            "title": "Time Zone",
            "type": "string",
            "description": "The preferred time zone for the user's displayed time values\n(see [time zones list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones)).\nIf not provided, the **WebTrit Core** server time zone is used.\n",
            "example": "Europe/Kyiv"
          }
        }
      },
      "UserRef": {
        "title": "UserRef",
        "type": "string",
        "description": "A reference identifier of the user on the **Adaptee**\n\nThis identifier is entered by the user in client applications and passed\nvia **WebTrit Core** to the **Adaptee** for sign-in purposes.\n\nThe identifier can be a phone number or any other attribute associated\nwith the user. When the same user is accessed using different references,\nit is crucial to ensure that the same `UserId` is assigned to this user.\n",
        "example": "1234567890"
      },
      "UserVoicemailDetailsInternalServerErrorResponse": {
        "title": "UserVoicemailDetailsInternalServerErrorResponse",
        "type": "object",
        "properties": {
          "code": {
            "title": "Code",
            "type": "string",
            "description": "`code` field values that are defined (but can be expanded) are:\n- `external_api_issue`"
          },
          "details": {
            "title": "Details",
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/Detail"
                },
                {
                  "type": "object"
                }
              ]
            },
            "description": "Additional details related to the error code, which depend on the specific error.\n"
          },
          "message": {
            "title": "Message",
            "type": "string",
            "description": "Description of the error."
          }
        }
      },
      "UserVoicemailDetailsNotFoundErrorResponse": {
        "title": "UserVoicemailDetailsNotFoundErrorResponse",
        "type": "object",
        "properties": {
          "code": {
            "title": "Code",
            "type": "string",
            "description": "`code` field values that are defined (but can be expanded) are:\n- `session_not_found`\n- `user_not_found` \n- `message_not_found`"
          },
          "details": {
            "title": "Details",
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/Detail"
                },
                {
                  "type": "object"
                }
              ]
            },
            "description": "Additional details related to the error code, which depend on the specific error.\n"
          },
          "message": {
            "title": "Message",
            "type": "string",
            "description": "Description of the error."
          }
        }
      },
      "UserVoicemailDetailsUnauthorizedErrorResponse": {
        "title": "UserVoicemailDetailsUnauthorizedErrorResponse",
        "type": "object",
        "properties": {
          "code": {
            "title": "Code",
            "type": "string",
            "description": "`code` field values that are defined (but can be expanded) are:\n- `authorization_header_missing`\n- `bearer_credentials_missing`\n- `access_token_invalid`\n- `access_token_expired`\n- `unknown`"
          },
          "details": {
            "title": "Details",
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/Detail"
                },
                {
                  "type": "object"
                }
              ]
            },
            "description": "Additional details related to the error code, which depend on the specific error.\n"
          },
          "message": {
            "title": "Message",
            "type": "string",
            "description": "Description of the error."
          }
        }
      },
      "UserVoicemailInternalServerErrorResponse": {
        "title": "UserVoicemailInternalServerErrorResponse",
        "type": "object",
        "properties": {
          "code": {
            "title": "Code",
            "type": "string",
            "description": "`code` field values that are defined (but can be expanded) are:\n- `external_api_issue`"
          },
          "details": {
            "title": "Details",
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/Detail"
                },
                {
                  "type": "object"
                }
              ]
            },
            "description": "Additional details related to the error code, which depend on the specific error.\n"
          },
          "message": {
            "title": "Message",
            "type": "string",
            "description": "Description of the error."
          }
        }
      },
      "UserVoicemailMessageAttachmentInternalServerErrorResponse": {
        "title": "UserVoicemailMessageAttachmentInternalServerErrorResponse",
        "type": "object",
        "properties": {
          "code": {
            "title": "Code",
            "type": "string",
            "description": "`code` field values that are defined (but can be expanded) are:\n- `external_api_issue`"
          },
          "details": {
            "title": "Details",
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/Detail"
                },
                {
                  "type": "object"
                }
              ]
            },
            "description": "Additional details related to the error code, which depend on the specific error.\n"
          },
          "message": {
            "title": "Message",
            "type": "string",
            "description": "Description of the error."
          }
        }
      },
      "UserVoicemailMessageAttachmentNotFoundErrorResponse": {
        "title": "UserVoicemailMessageAttachmentNotFoundErrorResponse",
        "type": "object",
        "properties": {
          "code": {
            "title": "Code",
            "type": "string",
            "description": "`code` field values that are defined (but can be expanded) are:\n- `session_not_found`\n- `user_not_found` \n- `message_not_found`"
          },
          "details": {
            "title": "Details",
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/Detail"
                },
                {
                  "type": "object"
                }
              ]
            },
            "description": "Additional details related to the error code, which depend on the specific error.\n"
          },
          "message": {
            "title": "Message",
            "type": "string",
            "description": "Description of the error."
          }
        }
      },
      "UserVoicemailMessageAttachmentUnauthorizedErrorResponse": {
        "title": "UserVoicemailMessageAttachmentUnauthorizedErrorResponse",
        "type": "object",
        "properties": {
          "code": {
            "title": "Code",
            "type": "string",
            "description": "`code` field values that are defined (but can be expanded) are:\n- `authorization_header_missing`\n- `bearer_credentials_missing`\n- `access_token_invalid`\n- `access_token_expired`\n- `unknown`"
          },
          "details": {
            "title": "Details",
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/Detail"
                },
                {
                  "type": "object"
                }
              ]
            },
            "description": "Additional details related to the error code, which depend on the specific error.\n"
          },
          "message": {
            "title": "Message",
            "type": "string",
            "description": "Description of the error."
          }
        }
      },
      "UserVoicemailMessageAttachmentUnprocessableEntityErrorResponse": {
        "title": "UserVoicemailMessageAttachmentUnprocessableEntityErrorResponse",
        "type": "object",
        "properties": {
          "code": {
            "title": "Code",
            "type": "string",
            "description": "`code` field values that are defined (but can be expanded) are:\n- `unsupported_file_format`"
          },
          "details": {
            "title": "Details",
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/Detail"
                },
                {
                  "type": "object"
                }
              ]
            },
            "description": "Additional details related to the error code, which depend on the specific error.\n"
          },
          "message": {
            "title": "Message",
            "type": "string",
            "description": "Description of the error."
          }
        }
      },
      "UserVoicemailMessageDeleteInternalServerErrorResponse": {
        "title": "UserVoicemailMessageDeleteInternalServerErrorResponse",
        "type": "object",
        "properties": {
          "code": {
            "title": "Code",
            "type": "string",
            "description": "`code` field values that are defined (but can be expanded) are:\n- `external_api_issue`"
          },
          "details": {
            "title": "Details",
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/Detail"
                },
                {
                  "type": "object"
                }
              ]
            },
            "description": "Additional details related to the error code, which depend on the specific error.\n"
          },
          "message": {
            "title": "Message",
            "type": "string",
            "description": "Description of the error."
          }
        }
      },
      "UserVoicemailMessageDeleteNotFoundErrorResponse": {
        "title": "UserVoicemailMessageDeleteNotFoundErrorResponse",
        "type": "object",
        "properties": {
          "code": {
            "title": "Code",
            "type": "string",
            "description": "`code` field values that are defined (but can be expanded) are:\n- `session_not_found`\n- `user_not_found` \n- `message_not_found`"
          },
          "details": {
            "title": "Details",
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/Detail"
                },
                {
                  "type": "object"
                }
              ]
            },
            "description": "Additional details related to the error code, which depend on the specific error.\n"
          },
          "message": {
            "title": "Message",
            "type": "string",
            "description": "Description of the error."
          }
        }
      },
      "UserVoicemailMessageDeleteUnauthorizedErrorResponse": {
        "title": "UserVoicemailMessageDeleteUnauthorizedErrorResponse",
        "type": "object",
        "properties": {
          "code": {
            "title": "Code",
            "type": "string",
            "description": "`code` field values that are defined (but can be expanded) are:\n- `authorization_header_missing`\n- `bearer_credentials_missing`\n- `access_token_invalid`\n- `access_token_expired`\n- `unknown`"
          },
          "details": {
            "title": "Details",
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/Detail"
                },
                {
                  "type": "object"
                }
              ]
            },
            "description": "Additional details related to the error code, which depend on the specific error.\n"
          },
          "message": {
            "title": "Message",
            "type": "string",
            "description": "Description of the error."
          }
        }
      },
      "UserVoicemailMessagePatch": {
        "title": "UserVoicemailMessagePatch",
        "required": [
          "seen"
        ],
        "type": "object",
        "properties": {
          "seen": {
            "title": "Seen",
            "type": "boolean"
          }
        }
      },
      "UserVoicemailMessagePatchInternalServerErrorResponse": {
        "title": "UserVoicemailMessagePatchInternalServerErrorResponse",
        "type": "object",
        "properties": {
          "code": {
            "title": "Code",
            "type": "string",
            "description": "`code` field values that are defined (but can be expanded) are:\n- `external_api_issue`"
          },
          "details": {
            "title": "Details",
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/Detail"
                },
                {
                  "type": "object"
                }
              ]
            },
            "description": "Additional details related to the error code, which depend on the specific error.\n"
          },
          "message": {
            "title": "Message",
            "type": "string",
            "description": "Description of the error."
          }
        }
      },
      "UserVoicemailMessagePatchNotFoundErrorResponse": {
        "title": "UserVoicemailMessagePatchNotFoundErrorResponse",
        "type": "object",
        "properties": {
          "code": {
            "title": "Code",
            "type": "string",
            "description": "`code` field values that are defined (but can be expanded) are:\n- `session_not_found`\n- `user_not_found` \n- `message_not_found`"
          },
          "details": {
            "title": "Details",
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/Detail"
                },
                {
                  "type": "object"
                }
              ]
            },
            "description": "Additional details related to the error code, which depend on the specific error.\n"
          },
          "message": {
            "title": "Message",
            "type": "string",
            "description": "Description of the error."
          }
        }
      },
      "UserVoicemailMessagePatchUnauthorizedErrorResponse": {
        "title": "UserVoicemailMessagePatchUnauthorizedErrorResponse",
        "type": "object",
        "properties": {
          "code": {
            "title": "Code",
            "type": "string",
            "description": "`code` field values that are defined (but can be expanded) are:\n- `authorization_header_missing`\n- `bearer_credentials_missing`\n- `access_token_invalid`\n- `access_token_expired`\n- `unknown`"
          },
          "details": {
            "title": "Details",
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/Detail"
                },
                {
                  "type": "object"
                }
              ]
            },
            "description": "Additional details related to the error code, which depend on the specific error.\n"
          },
          "message": {
            "title": "Message",
            "type": "string",
            "description": "Description of the error."
          }
        }
      },
      "UserVoicemailNotFoundErrorResponse": {
        "title": "UserVoicemailNotFoundErrorResponse",
        "type": "object",
        "properties": {
          "code": {
            "title": "Code",
            "type": "string",
            "description": "`code` field values that are defined (but can be expanded) are:\n- `session_not_found`\n- `user_not_found`"
          },
          "details": {
            "title": "Details",
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/Detail"
                },
                {
                  "type": "object"
                }
              ]
            },
            "description": "Additional details related to the error code, which depend on the specific error.\n"
          },
          "message": {
            "title": "Message",
            "type": "string",
            "description": "Description of the error."
          }
        }
      },
      "UserVoicemailUnauthorizedErrorResponse": {
        "title": "UserVoicemailUnauthorizedErrorResponse",
        "type": "object",
        "properties": {
          "code": {
            "title": "Code",
            "type": "string",
            "description": "`code` field values that are defined (but can be expanded) are:\n- `authorization_header_missing`\n- `bearer_credentials_missing`\n- `access_token_invalid`\n- `access_token_expired`\n- `unknown`"
          },
          "details": {
            "title": "Details",
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/Detail"
                },
                {
                  "type": "object"
                }
              ]
            },
            "description": "Additional details related to the error code, which depend on the specific error.\n"
          },
          "message": {
            "title": "Message",
            "type": "string",
            "description": "Description of the error."
          }
        }
      },
      "UserVoicemailsResponse": {
        "title": "UserVoicemailsResponse",
        "required": [
          "messages",
          "has_new_messages"
        ],
        "type": "object",
        "properties": {
          "messages": {
            "title": "Messages",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/VoicemailMessage"
            }
          },
          "has_new_messages": {
            "title": "Has New Messages",
            "type": "boolean"
          }
        }
      },
      "ValidationError": {
        "title": "ValidationError",
        "required": [
          "loc",
          "msg",
          "type"
        ],
        "type": "object",
        "properties": {
          "loc": {
            "title": "Location",
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            }
          },
          "msg": {
            "title": "Message",
            "type": "string"
          },
          "type": {
            "title": "Error Type",
            "type": "string"
          }
        }
      },
      "VerifySessionOtpInternalServerErrorErrorResponse": {
        "title": "VerifySessionOtpInternalServerErrorErrorResponse",
        "type": "object",
        "properties": {
          "code": {
            "title": "Code",
            "type": "string",
            "description": "`code` field values that are defined (but can be expanded) are:\n- `external_api_issue`"
          },
          "details": {
            "title": "Details",
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/Detail"
                },
                {
                  "type": "object"
                }
              ]
            },
            "description": "Additional details related to the error code, which depend on the specific error.\n"
          },
          "message": {
            "title": "Message",
            "type": "string",
            "description": "Description of the error."
          }
        }
      },
      "VerifySessionOtpNotFoundErrorResponse": {
        "title": "VerifySessionOtpNotFoundErrorResponse",
        "type": "object",
        "properties": {
          "code": {
            "title": "Code",
            "type": "string",
            "description": "`code` field values that are defined (but can be expanded) are:\n- `otp_not_found`"
          },
          "details": {
            "title": "Details",
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/Detail"
                },
                {
                  "type": "object"
                }
              ]
            },
            "description": "Additional details related to the error code, which depend on the specific error.\n"
          },
          "message": {
            "title": "Message",
            "type": "string",
            "description": "Description of the error."
          }
        }
      },
      "VerifySessionOtpUnprocessableEntityErrorResponse": {
        "title": "VerifySessionOtpUnprocessableEntityErrorResponse",
        "type": "object",
        "properties": {
          "code": {
            "title": "Code",
            "type": "string",
            "description": "`code` field values that are defined (but can be expanded) are:\n- `validation_error`"
          },
          "details": {
            "title": "Details",
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/Detail"
                },
                {
                  "type": "object"
                }
              ]
            },
            "description": "Additional details related to the error code, which depend on the specific error.\n"
          },
          "message": {
            "title": "Message",
            "type": "string",
            "description": "Description of the error."
          }
        }
      },
      "VoicemailMessage": {
        "title": "VoicemailMessage",
        "required": [
          "id",
          "type",
          "size",
          "date",
          "seen"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "type": "string",
            "description": "The unique ID of the message.",
            "example": "1654"
          },
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/VoicemailMessageType"
              }
            ],
            "description": "The type of the message."
          },
          "duration": {
            "title": "Duration",
            "type": "number",
            "description": "The duration of the voice message in seconds.",
            "example": 3.45
          },
          "size": {
            "title": "Size",
            "type": "integer",
            "description": "The total size of all attachments in the message in KB.",
            "example": 5
          },
          "date": {
            "title": "Date",
            "type": "string",
            "description": "The delivery date of the message.",
            "format": "date-time"
          },
          "seen": {
            "title": "Seen",
            "type": "boolean",
            "description": "Indicates whether this message has been seen.",
            "example": false
          }
        }
      },
      "VoicemailMessageAttachment": {
        "title": "VoicemailMessageAttachment",
        "required": [
          "type",
          "subtype",
          "size",
          "filename"
        ],
        "type": "object",
        "properties": {
          "type": {
            "title": "Type",
            "type": "string",
            "description": "The MIME type of the body.",
            "example": "audio"
          },
          "subtype": {
            "title": "Subtype",
            "type": "string",
            "description": "The MIME subtype of the body.",
            "example": "basic"
          },
          "size": {
            "title": "Size",
            "type": "integer",
            "description": "The size of the body in KB.",
            "example": 5
          },
          "filename": {
            "title": "Filename",
            "type": "string",
            "description": "The name of the attached file.",
            "example": "voice_message_2024-06-07_12-32-03.au"
          }
        }
      },
      "VoicemailMessageDetails": {
        "title": "VoicemailMessageDetails",
        "required": [
          "id",
          "type",
          "size",
          "date",
          "seen",
          "sender",
          "receiver",
          "attachments"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "type": "string",
            "description": "The unique ID of the message.",
            "example": "1654"
          },
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/VoicemailMessageType"
              }
            ],
            "description": "The type of the message."
          },
          "duration": {
            "title": "Duration",
            "type": "number",
            "description": "The duration of the voice message in seconds.",
            "example": 3.45
          },
          "size": {
            "title": "Size",
            "type": "integer",
            "description": "The total size of all attachments in the message in KB.",
            "example": 5
          },
          "date": {
            "title": "Date",
            "type": "string",
            "description": "The delivery date of the message.",
            "format": "date-time"
          },
          "seen": {
            "title": "Seen",
            "type": "boolean",
            "description": "Indicates whether this message has been seen.",
            "example": false
          },
          "sender": {
            "title": "Sender",
            "type": "string",
            "description": "The sender of the message.",
            "example": "Caller #123010 <123010@sip.webtrit.com>"
          },
          "receiver": {
            "title": "Receiver",
            "type": "string",
            "description": "The receiver of the message.",
            "example": "123009 <123009@sip.webtrit.com>"
          },
          "attachments": {
            "title": "Attachments",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/VoicemailMessageAttachment"
            }
          }
        }
      },
      "VoicemailMessageType": {
        "title": "VoicemailMessageType",
        "enum": [
          "voice",
          "fax"
        ],
        "description": "An enumeration."
      }
    },
    "securitySchemes": {
      "HTTPBearer": {
        "type": "http",
        "scheme": "bearer"
      }
    }
  }
}